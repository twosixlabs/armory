---
name: GitHub CI

on:
  push:
    branches:
      - master
      - r*

  pull_request:
    branches:
      - master
      - r*
jobs:
  pytest-host:
    name: PyTest Host
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-18.04', 'windows-latest']
        python-version: ['3.6']
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run armory host tests
        run: |
          pip install -r requirements.txt
          pip install -r test-requirements.txt
          version=$(python -m armory --version)

          bash docker/build-dev-minimal.sh
          pytest -s ./tests/test_host/
  pytest-tf1:
    name: PyTest TF1
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - name: Run armory TF1 docker tests
        run: |
          pip install -r requirements.txt
          version=$(python -m armory --version)

          bash docker/build-dev-minimal.sh
          docker run -w /armory_dev twosixarmory/tf1:${version} \
          pytest -s ./tests/test_docker_tf1/
  flake8-test:
    name: Flake8
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8
  black-test:
    name: Black code format
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: install black
        run: pip install black
      - name: Ensure contributor used ("black ./") before commit
        run: black --check ./
  yamllint-test:
    name: Yamllint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: install yamllint
        run: pip install yamllint
      - name: Run yamllint
        run: yamllint --no-warnings ./
  json-format-test:
    name: JSON file format
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: Ensure contributor used ("python -m tools.format_json") before commit
        run: python -m tools.format_json --check
