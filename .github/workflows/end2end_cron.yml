---
name: End-to-End Tests

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
      - develop
  schedule:
    - cron: 0 0 * * * # At Midnight Every Day

jobs:
  ignore:
    name: ðŸ¦„ pass
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run: echo "ðŸ¦„ pass"

  # docker-build:
  #   name: Build Docker Image
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.7'
  #     - name: Build Docker
  #       id: docker-build
  #       run: |
  #         pip install -r requirements.txt
  #         pip install -e .
  #         python docker/build.py all
  #   outputs:
  #     imageTag: ${{ steps.docker-build.outputs.imageTag }}
  # docker-pytorch-end2end:
  #   name: Docker Torch End2End
  #   needs: docker-build
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Run Tests Torch Docker
  #       run: |
  #         imageName=twosixarmory/pytorch:${{ needs.docker-build.outputs.imageTag }}
  #         echo "Running Tests with Image -> $imageName"
  #         docker run -w /armory-repo/ $imageName pytest -vs -m "not docker_required and end_to_end" ./tests/
  # docker-tf2-end2end:
  #   name: Docker TF2 End2End
  #   needs: docker-build
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Run Tests TF2 Docker
  #       run: |
  #         imageName=twosixarmory/tf2:${{ needs.docker-build.outputs.imageTag }}
  #         echo "Running Tests with Image -> $imageName"
  #         docker run -w /armory-repo/ $imageName pytest -vs -m "not docker_required and end_to_end" ./tests/
  # docker-deepspeech-end2end:
  #   name: Docker Deepspeech End2End
  #   needs: docker-build
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Run Tests Deepspeech Docker
  #       run: |
  #         imageName=twosixarmory/pytorch-deepspeech:${{ needs.docker-build.outputs.imageTag }}
  #         echo "Running Tests with Image -> $imageName"
  #         docker run -w /armory-repo/ $imageName pytest -vs -m "not docker_required and end_to_end" ./tests/
  # docker-remove:
  #   name: Remove Docker Images
  #   needs: [docker-build, docker-pytorch-end2end, docker-tf2-end2end, docker-deepspeech-end2end]
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Run Tests Torch Docker
  #       run: |
  #         docker rmi twosixarmory/pytorch:${{ needs.docker-build.outputs.imageTag }}
  #         docker rmi twosixarmory/tf2:${{ needs.docker-build.outputs.imageTag }}
  #         docker rmi twosixarmory/pytorch-deepspeech:${{ needs.docker-build.outputs.imageTag }}
