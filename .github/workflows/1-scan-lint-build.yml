---
name: 🙈 🙉 🙊 Scan & Lint

on: workflow_call

jobs:
  code-quality:
    name: 🦄 Code Quality
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: 🐄 Got git?
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Get history and tags for SCM versioning to work
      # yamllint disable rule:indentation
      - name: 📩 Checkout the Source
        run: |
          git fetch --prune --unshallow || true
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          # Verify .git folder
          if [ ! -d "./.git" ]; then
            echo "Expected ./.git folder to exist"
            exit 1
          fi
      # yamllint enable rule:indentation

      - name: 🐍 Switch Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: 🌱 Setup Test Enviroment
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade build

          export ARMORY_ROOT_DIR=`git rev-parse --show-toplevel`
          export ARMORY_SRC_DIR="${ARMORY_ROOT_DIR}/armory"

          mkdir -p /tmp/artifacts


      - name: ⚙️ Installing Armory
        shell: bash
        run: |
          pip3 install --no-compile --editable '.[developer]'

          armory configure --use-defaults

          echo `armory --version` > /tmp/artifacts/version.txt


      - name: 🚀 Run commit hooks
        run: |
          echo "💄 Running commit hooks for Armory version ${VERSION}"

          bash tools/pre-commit.sh
        # if [ $? -ne 0 ]; then
        #   echo "🚨 Pre-commit hooks failed. Please run 'pre-commit run --all-files' locally to fix the issues 🚑"
        #   exit 1
        # fi

      # yamllint disable rule:indentation
      - name: 📦 Build Testing
        run: |
          python -m          \
            build            \
            --sdist          \
            --wheel          \
            --outdir dist/   \
            .

          pip3 install --no-compile dist/*.whl

          armory configure --use-defaults

          if [ $? -ne 0 ]; then
            echo "🚨 Build failed. Please fix the issues 🚑"
            exit 1
          fi

      - name: 🦹‍♂️ Scanning with Bandit
        run: |
          bandit                                    \
            -v                                      \
            -f txt                                  \
            -r ./armory                             \
            -c "pyproject.toml"                     \
            --output /tmp/artifacts/bandit_scan.txt \
          || $( exit 0 ); echo $?

      - name: ❄️ Running Flake8
        run: |
            flake8 ${ARMORY_SRC_DIR}  \
              --count                 \
              --exit-zero             \
              --max-complexity=10     \
              --max-line-length=127   \
              --statistics            \
              --show-source           \
              --color=always          \
              --config=.flake8        \
              --output-file /tmp/artifacts/flake8.txt
          # TODO: C901 - Determine if `# noqa: C901` is needed
          #   python3 -m pip install astpretty
          #   if flake8 code == C901:
          #     astpretty(file) => save to artifacts

      - name: 🖋️ mypy Type Checking
        run: |
          python3 -m pip install mypy
          python3 -m pip install types-requests
          mypy                         \
            armory                     \
            --ignore-missing-imports   \
            --follow-imports=skip      \
            --show-error-codes         \
            --show-column-numbers      \
            --pretty                   \
            > /tmp/artifacts/mypy.txt  \
          || $( exit 0 ); echo $?
      # yamllint enable rule:indentation

      - name: 📁 Archiving Artifacts
        uses: actions/upload-artifact@v3
        if: ${{ !failure() }}
        continue-on-error: true
        with:
          name: scan-artifacts
          retention-days: 1
          path: |
            /tmp/artifacts
